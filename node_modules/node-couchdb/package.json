{
  "name": "node-couchdb",
  "version": "0.4.0",
  "homepage": "https://github.com/1999/node-couchdb",
  "author": {
    "name": "Dmitry Sorin",
    "email": "info@staypositive.ru"
  },
  "description": "node.js package to interact with CouchDB using ETags and your favorite cache layer (memcached, fs, memory, etc)",
  "contributors": [
    {
      "name": "Dmitry Sorin",
      "url": "http://www.staypositive.ru"
    }
  ],
  "main": "./index.js",
  "repository": {
    "type": "git",
    "url": "git://github.com/1999/node-couchdb.git"
  },
  "bugs": {
    "url": "https://github.com/1999/node-couchdb/issues"
  },
  "directories": {
    "example": "examples"
  },
  "scripts": {
    "test": "nodeunit tests/*"
  },
  "keywords": [
    "couchdb",
    "memcached",
    "memcache",
    "nosql"
  ],
  "dependencies": {
    "asker": "0.6.2"
  },
  "devDependencies": {
    "memcache": "0.3.x",
    "memcached": "0.2.x",
    "nodeunit": "0.9.1"
  },
  "license": "MIT",
  "engines": {
    "node": ">=0.10"
  },
  "readme": "# node-couchdb [![Build Status](https://secure.travis-ci.org/1999/node-couchdb.svg?branch=master)](http://travis-ci.org/1999/node-couchdb) [![Dependency Status](https://david-dm.org/1999/node-couchdb.svg)](https://david-dm.org/1999/node-couchdb) [![devDependency Status](https://david-dm.org/1999/node-couchdb/dev-status.svg)](https://david-dm.org/1999/node-couchdb#info=devDependencies)\n\n[CouchDB](http://couchdb.apache.org/) is amazing and easy-to-use NoSQL document-oriented database. This package provides an easy way to interact with CouchDB using ETags and your preferred cache layer (memcached, file system, memory, etc). Check out [examples](https://github.com/1999/node-couchdb/tree/master/examples) folder for more info.\n\n# Installation\n``` bash\nnpm install node-couchdb\n```\nor\n``` bash\nnpm install --dev\n```\nto run examples\n\n# API\nHow to start\n``` javascript\n// use memory caching\nvar nodeCouchDB = require(\"node-couchdb\");\nvar couch = new nodeCouchDB(\"localhost\", 5984);\n\n// even simplier, but you can't set host and port this way\nvar couch = require(\"node-couchdb\");\n\n// use memcached with \"memcache\" NPM package\nvar nodeCouchDB = require(\"node-couchdb\");\nvar memcacheClient = require(\"memcache\").Client(11211, \"localhost\");\nmemcacheClient.on(\"connect\", function () {\n\tmemcacheClient.invalidate = function () {};\n\tvar couch = new nodeCouchDB(\"localhost\", 5984, memcacheClient);\n});\n\nmemcacheClient.connect();\n```\n\nFetch document by its id\n``` javascript\ncouch.get(\"databaseName\", \"some_document_id\", function (err, resData) {\n\tif (err)\n\t\treturn console.error(err);\n\n\tconsole.dir(resData);\n});\n```\n\nInsert a document\n``` javascript\ncouch.insert(\"databaseName\", {\n\t_id: \"document_id\",\n\tfield: [\"sample\", \"data\", true]\n}, function (err, resData) {\n\tif (err)\n\t\treturn console.error(err);\n\n\tconsole.dir(resData)\n});\n```\n\nUpdate a document\n``` javascript\n// note that \"doc\" must have both \"_id\" and \"_rev\" fields\ncouch.update(\"databaseName\", {\n\t_id: \"document_id\",\n\t_rev: \"1-xxx\"\n\tfield: \"new sample data\",\n\tfield2: 1\n}, function (err, resData) {\n\tif (err)\n\t\treturn console.error(err);\n\n\tconsole.dir(resData);\n});\n```\n\nDelete a document\n``` javascript\ncouch.del(\"databaseName\", \"some_document_id\", \"document_revision\", function (err, resData) {\n\tif (err)\n\t\treturn console.error(err);\n\n\tconsole.dir(resData);\n});\n```\n\nGenerate unique identifier(s)\n``` javascript\ncouch.uniqid(1, function (err, ids) { // or even simplier: couch.uniqid(function (err, ids) {\n\tif (err)\n\t\treturn console.error(err);\n\n\tconsole.dir(ids);\n});\n```\n\nFetch data by requesting a view\n``` javascript\nvar dbName = \"database\";\nvar startKey = [\"Ann\"];\nvar endKey = [\"George\"];\nvar viewUrl = \"_design/list/_views/by_firstname\";\nvar queryOptions = {\n\tstartkey: startKey,\n\tendkey: endKey\n};\n\ncouch.get(dbName, viewUrl, queryOptions, function (err, resData) {\n\tif (err)\n\t\treturn console.error(err);\n\n\tconsole.dir(resData)\n});\n```\n\n```couch.createDatabase()```, ```couch.dropDatabase()``` and ```couch.listDatabases()``` are also available. Check out the [sources](https://github.com/1999/node-couchdb/blob/master/lib/node-couchdb.js) for more info.\n",
  "readmeFilename": "README.md",
  "_id": "node-couchdb@0.4.0",
  "dist": {
    "shasum": "67cb433a54bc84a2c887d1f803a7e27dde523e77"
  },
  "_from": "node-couchdb@",
  "_resolved": "https://registry.npmjs.org/node-couchdb/-/node-couchdb-0.4.0.tgz"
}
